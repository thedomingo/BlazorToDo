@page "/"

@inject IModalService Modal
@inject IToastService toastService

<h1>Blazor To do</h1>


<button class="btn btn btn-primary mb-3" @onclick="(()=>OpenAddCategoryModal())">Dodaj kategorijo</button>

@foreach (var category in categories)
{
    <div class="card text-center mb-4">
        <div class="card-header">

            <h3>@category.Name</h3>

        </div>


        <div class="card-body">
            <div class="row row-cols-1 row-cols-md-2">

                @foreach (var todo in category.TodoItems)
                {
                    <div class="col mb-4">
                        <div class="card @todo.BorderStatus">
                            <div class="card-header @todo.HeaderStatus">
                                <h5 class="card-title">@todo.Name</h5>
                            </div>
                            <div class="card-body">
                                <h5 class="card-title">@todo.Name</h5>
                                <p class="card-text">@todo.Description</p>
                                <p class="card-text">
                                    <small class="text-muted">@todo.CreatedDate</small>


                                </p>
                            </div>
                            <div class="card-footer text-muted">
                                @if (!todo.IsDone)
                                {
                                    <button class="btn btn-sm btn-success" @onclick="(()=>MarkAsCompleted(todo))">Končano</button>
                                }

                                <button class="btn btn-sm btn-danger" @onclick="(()=>DeleteTodoItem(category, todo))">Izbriši</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="card-footer text-muted">
            <button class="btn btn-sm btn-success" @onclick="(()=>OpenAddTodoModal(category))">Dodaj TODO</button>
            <button class="btn btn-sm btn-danger" @onclick="(()=>DeleteCategory(category))">Izbriši kategorijo</button>
        </div>
    </div>
}




@code{
    private List<Category> categories = new List<Category>();
    private Category selectedCategory;

    private void OpenAddCategoryModal()
    {
        Modal.OnClose += NewCategoryModalClosed;
        Modal.Show<NewCategory>("Nova kategorija");
    }

    void NewCategoryModalClosed(ModalResult modalResult)
    {
        if (!modalResult.Cancelled)
        {
            categories.Add((Category)modalResult.Data);
            StateHasChanged();
        }

        Modal.OnClose -= NewCategoryModalClosed;
    }

    private void OpenAddTodoModal(Category category)
    {
        selectedCategory = category;
        Modal.OnClose += NewTodoModalClosed;
        Modal.Show<NewTodo>("Nov TODO");
    }

    void NewTodoModalClosed(ModalResult modalResult)
    {
        if (!modalResult.Cancelled)
        {
            selectedCategory.TodoItems.Add((TodoItem)modalResult.Data);
            selectedCategory = null;
            StateHasChanged();
        }

        Modal.OnClose -= NewTodoModalClosed;
    }

    void MarkAsCompleted(TodoItem todo)
    {
        todo.IsDone = true;
        StateHasChanged();
    }

    void DeleteTodoItem(Category category, TodoItem todo)
    {
        category.TodoItems.Remove(todo);
        StateHasChanged();
        toastService.ShowInfo($"Todo '{todo.Name}' je bil izbrisan!", "");
    }

    void DeleteCategory(Category category)
    {
        categories.Remove(category);
        StateHasChanged();
        toastService.ShowInfo($"Kategorija '{category.Name}' je bila izbrisana!", "");
    }
}